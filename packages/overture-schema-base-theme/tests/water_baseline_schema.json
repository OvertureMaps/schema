{
  "$defs": {
    "NameRule": {
      "additionalProperties": false,
      "description": "Name rule with variant and language specification.",
      "properties": {
        "between": {
          "description": "Linear reference range [start, end] where 0.0 <= start < end <= 1.0",
          "items": {
            "maximum": 1.0,
            "minimum": 0.0,
            "type": "number"
          },
          "maxItems": 2,
          "minItems": 2,
          "title": "Between",
          "type": "array"
        },
        "language": {
          "description": "IETF BCP-47 language tag",
          "pattern": "^(?:(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}?)|(?:[A-Za-z]{4,8}))(?:-[A-Za-z]{4})?(?:-[A-Za-z]{2}|[0-9]{3})?(?:-(?:[A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(?:-[A-WY-Za-wy-z0-9](?:-[A-Za-z0-9]{2,8})+)*$",
          "title": "Language",
          "type": "string"
        },
        "perspectives": {
          "$ref": "#/$defs/Perspectives",
          "description": "Political perspectives from which a named feature is viewed."
        },
        "side": {
          "$ref": "#/$defs/Side"
        },
        "value": {
          "description": "String with no leading/trailing whitespace",
          "minLength": 1,
          "pattern": "^(\\S.*)?\\S$",
          "title": "Value",
          "type": "string"
        },
        "variant": {
          "$ref": "#/$defs/NameVariant"
        }
      },
      "required": [
        "value",
        "variant"
      ],
      "title": "NameRule",
      "type": "object"
    },
    "NameVariant": {
      "enum": [
        "common",
        "official",
        "alternate",
        "short"
      ],
      "title": "NameVariant",
      "type": "string"
    },
    "Names": {
      "additionalProperties": false,
      "description": "Multilingual names container.",
      "properties": {
        "common": {
          "additionalProperties": false,
          "patternProperties": {
            "^(?:(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}?)|(?:[A-Za-z]{4,8}))(?:-[A-Za-z]{4})?(?:-[A-Za-z]{2}|[0-9]{3})?(?:-(?:[A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(?:-[A-WY-Za-wy-z0-9](?:-[A-Za-z0-9]{2,8})+)*$": {
              "description": "String with no leading/trailing whitespace",
              "pattern": "^(\\S.*)?\\S$",
              "type": "string"
            }
          },
          "propertyNames": {
            "description": "IETF BCP-47 language tag"
          },
          "title": "Common",
          "type": "object"
        },
        "primary": {
          "description": "The most commonly used name.",
          "minLength": 1,
          "pattern": "^(\\S.*)?\\S$",
          "title": "Primary",
          "type": "string"
        },
        "rules": {
          "description": "Rules for names that cannot be specified in the simple common names property. These rules can cover other name variants such as official, alternate, and short; and they can optionally include geometric scoping (linear referencing) and side-of-road scoping for complex cases.",
          "items": {
            "$ref": "#/$defs/NameRule"
          },
          "title": "Rules",
          "type": "array"
        }
      },
      "required": [
        "primary"
      ],
      "title": "Names",
      "type": "object"
    },
    "PerspectiveMode": {
      "description": "Perspective mode for disputed names.",
      "enum": [
        "accepted_by",
        "disputed_by"
      ],
      "title": "PerspectiveMode",
      "type": "string"
    },
    "Perspectives": {
      "additionalProperties": false,
      "description": "Political perspectives container.",
      "properties": {
        "countries": {
          "description": "Countries holding the given mode of perspective.",
          "items": {
            "description": "ISO 3166-1 alpha-2 country code",
            "maxLength": 2,
            "minLength": 2,
            "pattern": "^[A-Z]{2}$",
            "type": "string"
          },
          "minItems": 1,
          "title": "Countries",
          "type": "array",
          "uniqueItems": true
        },
        "mode": {
          "$ref": "#/$defs/PerspectiveMode",
          "description": "Whether the perspective holder accepts or disputes this name."
        }
      },
      "required": [
        "mode",
        "countries"
      ],
      "title": "Perspectives",
      "type": "object"
    },
    "Side": {
      "description": "Represents the side on which something appears relative to a facing or heading\ndirection, e.g. the side of a road relative to the road orientation, or relative to\nthe direction of travel of a person or vehicle.",
      "enum": [
        "left",
        "right"
      ],
      "title": "Side",
      "type": "string"
    },
    "SourcePropertyItem": {
      "additionalProperties": false,
      "description": "An object storing the source for a specificed property.\n\nThe property is a reference to the property element within this Feature, and will be\nreferenced using JSON Pointer Notation RFC 6901 (\nhttps://datatracker.ietf.org/doc/rfc6901/).\nThe source dataset for that referenced property will be specified in the overture list of approved sources from the Overture Data Working Group that contains the relevant metadata for that dataset including license source organization.",
      "properties": {
        "between": {
          "description": "Linear reference range [start, end] where 0.0 <= start < end <= 1.0",
          "items": {
            "maximum": 1.0,
            "minimum": 0.0,
            "type": "number"
          },
          "maxItems": 2,
          "minItems": 2,
          "title": "Between",
          "type": "array"
        },
        "confidence": {
          "description": "Confidence score between 0.0 and 1.0",
          "maximum": 1.0,
          "minimum": 0.0,
          "title": "Confidence",
          "type": "number"
        },
        "dataset": {
          "title": "Dataset",
          "type": "string"
        },
        "license": {
          "description": "License name. This should be a valid SPDX license identifier when available. If the license is NULL, contact the data provider for more license information.",
          "pattern": "^(\\S.*)?\\S$",
          "title": "License",
          "type": "string"
        },
        "property": {
          "description": "JSON Pointer (RFC 6901)",
          "title": "Property",
          "type": "string"
        },
        "record_id": {
          "description": "Refers to the specific record within the dataset that was used.",
          "title": "Record Id",
          "type": "string"
        },
        "update_time": {
          "description": "ISO 8601 datetime",
          "format": "date-time",
          "pattern": "^([1-9]\\d{3})-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])T([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d|60)(\\.\\d{1,3})?(Z|[-+]([01]\\d|2[0-3]):[0-5]\\d)$",
          "title": "Update Time",
          "type": "string"
        }
      },
      "required": [
        "property",
        "dataset"
      ],
      "title": "SourcePropertyItem",
      "type": "object"
    },
    "WaterClass": {
      "description": "Further description of the type of water.",
      "enum": [
        "basin",
        "bay",
        "blowhole",
        "canal",
        "cape",
        "ditch",
        "dock",
        "drain",
        "fairway",
        "fish_pass",
        "fishpond",
        "geyser",
        "hot_spring",
        "lagoon",
        "lake",
        "moat",
        "ocean",
        "oxbow",
        "pond",
        "reflecting_pool",
        "reservoir",
        "river",
        "salt_pond",
        "sea",
        "sewage",
        "shoal",
        "spring",
        "strait",
        "stream",
        "swimming_pool",
        "tidal_channel",
        "wastewater",
        "water",
        "water_storage",
        "waterfall"
      ],
      "title": "WaterClass",
      "type": "string"
    },
    "WaterSubtype": {
      "description": "The type of water body such as an river, ocean or lake.",
      "enum": [
        "canal",
        "human_made",
        "lake",
        "ocean",
        "physical",
        "pond",
        "reservoir",
        "river",
        "spring",
        "stream",
        "wastewater",
        "water"
      ],
      "title": "WaterSubtype",
      "type": "string"
    }
  },
  "additionalProperties": false,
  "description": "Physical representations of inland and ocean marine surfaces.\n\nTranslates `natural` and `waterway` tags from OpenStreetMap.",
  "patternProperties": {
    "^ext_.*$": {
      "description": "Additional top-level properties must be prefixed with `ext_`."
    }
  },
  "properties": {
    "bbox": {
      "items": {
        "type": "number"
      },
      "maxItems": 4,
      "minItems": 4,
      "title": "Bbox",
      "type": "array"
    },
    "geometry": {
      "description": "Geometry (Point, LineString, Polygon, or MultiPolygon)",
      "oneOf": [
        {
          "properties": {
            "bbox": {
              "items": {
                "type": "number"
              },
              "minItems": 4,
              "type": "array"
            },
            "coordinates": {
              "items": {
                "items": {
                  "type": "number"
                },
                "maxItems": 3,
                "minItems": 2,
                "type": "array"
              },
              "minItems": 2,
              "type": "array"
            },
            "type": {
              "const": "LineString",
              "type": "string"
            }
          },
          "required": [
            "type",
            "coordinates"
          ],
          "type": "object"
        },
        {
          "properties": {
            "bbox": {
              "items": {
                "type": "number"
              },
              "minItems": 4,
              "type": "array"
            },
            "coordinates": {
              "items": {
                "items": {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "maxItems": 3,
                    "minItems": 2,
                    "type": "array"
                  },
                  "minItems": 4,
                  "type": "array"
                },
                "minItems": 1,
                "type": "array"
              },
              "minItems": 1,
              "type": "array"
            },
            "type": {
              "const": "MultiPolygon",
              "type": "string"
            }
          },
          "required": [
            "type",
            "coordinates"
          ],
          "type": "object"
        },
        {
          "properties": {
            "bbox": {
              "items": {
                "type": "number"
              },
              "minItems": 4,
              "type": "array"
            },
            "coordinates": {
              "items": {
                "type": "number"
              },
              "maxItems": 3,
              "minItems": 2,
              "type": "array"
            },
            "type": {
              "const": "Point",
              "type": "string"
            }
          },
          "required": [
            "type",
            "coordinates"
          ],
          "type": "object"
        },
        {
          "properties": {
            "bbox": {
              "items": {
                "type": "number"
              },
              "minItems": 4,
              "type": "array"
            },
            "coordinates": {
              "items": {
                "items": {
                  "items": {
                    "type": "number"
                  },
                  "maxItems": 3,
                  "minItems": 2,
                  "type": "array"
                },
                "minItems": 4,
                "type": "array"
              },
              "minItems": 1,
              "type": "array"
            },
            "type": {
              "const": "Polygon",
              "type": "string"
            }
          },
          "required": [
            "type",
            "coordinates"
          ],
          "type": "object"
        }
      ],
      "title": "Geometry"
    },
    "id": {
      "description": "A feature ID. This may be an ID associated with the Global Entity Reference System (GERS) if\u2014and-only-if the feature represents an entity that is part of GERS.",
      "minLength": 1,
      "pattern": "^\\S+$",
      "title": "Id",
      "type": "string"
    },
    "properties": {
      "additionalProperties": false,
      "patternProperties": {
        "^ext_.*$": {
          "description": "Additional top-level properties must be prefixed with `ext_`."
        }
      },
      "properties": {
        "class": {
          "$ref": "#/$defs/WaterClass",
          "default": "water"
        },
        "is_intermittent": {
          "description": "Is it intermittent water or not",
          "title": "Is Intermittent",
          "type": "boolean"
        },
        "is_salt": {
          "description": "Is it salt water or not",
          "title": "Is Salt",
          "type": "boolean"
        },
        "level": {
          "description": "Z-order of the feature where 0 is visual level",
          "title": "Level",
          "type": "integer"
        },
        "names": {
          "$ref": "#/$defs/Names"
        },
        "source_tags": {
          "additionalProperties": true,
          "description": "Any attributes/tags from the original source data that should be passed through.",
          "title": "Source Tags",
          "type": "object"
        },
        "sources": {
          "description": "The array of source information for the properties of a given feature, with each entry being a source object which lists the property in JSON Pointer notation and the dataset approved sources from the Overture Data Working Group that contains the relevant metadata for that dataset including license source organization.",
          "items": {
            "$ref": "#/$defs/SourcePropertyItem"
          },
          "minItems": 1,
          "title": "Sources",
          "type": "array",
          "uniqueItems": true
        },
        "subtype": {
          "$ref": "#/$defs/WaterSubtype",
          "default": "water"
        },
        "theme": {
          "const": "base",
          "title": "Theme",
          "type": "string"
        },
        "type": {
          "const": "water",
          "title": "Type",
          "type": "string"
        },
        "version": {
          "description": "",
          "minimum": 0,
          "title": "Version",
          "type": "integer"
        },
        "wikidata": {
          "description": "Wikidata identifier (Q followed by digits)",
          "pattern": "^Q\\d+$",
          "title": "Wikidata",
          "type": "string"
        }
      },
      "required": [
        "theme",
        "type",
        "version"
      ],
      "type": "object",
      "unevaluatedProperties": false
    },
    "type": {
      "const": "Feature",
      "type": "string"
    }
  },
  "required": [
    "id",
    "geometry",
    "properties",
    "type"
  ],
  "title": "water",
  "type": "object"
}