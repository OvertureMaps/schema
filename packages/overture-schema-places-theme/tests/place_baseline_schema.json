{
  "$defs": {
    "Address": {
      "additionalProperties": false,
      "properties": {
        "country": {
          "description": "ISO 3166-1 alpha-2 country code",
          "maxLength": 2,
          "minLength": 2,
          "pattern": "^[A-Z]{2}$",
          "title": "Country",
          "type": "string"
        },
        "freeform": {
          "description": "Free-form address that contains street name, house number and other address info",
          "title": "Freeform",
          "type": "string"
        },
        "locality": {
          "description": "Name of the city or neighborhood where the address is located",
          "title": "Locality",
          "type": "string"
        },
        "postcode": {
          "description": "Postal code where the address is located",
          "title": "Postcode",
          "type": "string"
        },
        "region": {
          "description": "ISO 3166-2 subdivision code",
          "maxLength": 6,
          "minLength": 4,
          "pattern": "^[A-Z]{2}-[A-Z0-9]{1,3}$",
          "title": "Region",
          "type": "string"
        }
      },
      "title": "Address",
      "type": "object"
    },
    "Brand": {
      "additionalProperties": false,
      "description": "The brand of the place.\n\nA location with multiple brands is modeled as multiple separate places, each with\nits own brand.",
      "properties": {
        "names": {
          "$ref": "#/$defs/Names"
        },
        "wikidata": {
          "description": "Wikidata identifier (Q followed by digits)",
          "pattern": "^Q\\d+$",
          "title": "Wikidata",
          "type": "string"
        }
      },
      "title": "Brand",
      "type": "object"
    },
    "Categories": {
      "additionalProperties": false,
      "description": "The categories of the place.\n\nComplete list is available on\nGitHub: https://github.com/OvertureMaps/schema/blob/main/docs/schema/concepts/by-theme/places/overture_categories.csv",
      "properties": {
        "alternate": {
          "description": "Alternate categories of the place. Some places might fit into two categories, e.g. a book store and a coffee shop. In such a case, the primary category can be augmented with additional applicable categories.",
          "items": {
            "description": "Category in snake_case format",
            "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
            "type": "string"
          },
          "title": "Alternate",
          "type": "array",
          "uniqueItems": true
        },
        "primary": {
          "description": "The primary or main category of the place.",
          "pattern": "^[a-z0-9]+(_[a-z0-9]+)*$",
          "title": "Primary",
          "type": "string"
        }
      },
      "required": [
        "primary"
      ],
      "title": "Categories",
      "type": "object"
    },
    "NameRule": {
      "additionalProperties": false,
      "description": "Name rule with variant and language specification.",
      "properties": {
        "between": {
          "description": "Linear reference range [start, end] where 0.0 <= start < end <= 1.0",
          "items": {
            "maximum": 1.0,
            "minimum": 0.0,
            "type": "number"
          },
          "maxItems": 2,
          "minItems": 2,
          "title": "Between",
          "type": "array"
        },
        "language": {
          "description": "IETF BCP-47 language tag",
          "pattern": "^(?:(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}?)|(?:[A-Za-z]{4,8}))(?:-[A-Za-z]{4})?(?:-[A-Za-z]{2}|[0-9]{3})?(?:-(?:[A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(?:-[A-WY-Za-wy-z0-9](?:-[A-Za-z0-9]{2,8})+)*$",
          "title": "Language",
          "type": "string"
        },
        "perspectives": {
          "$ref": "#/$defs/Perspectives",
          "description": "Political perspectives from which a named feature is viewed."
        },
        "side": {
          "$ref": "#/$defs/Side"
        },
        "value": {
          "description": "String with no leading/trailing whitespace",
          "minLength": 1,
          "pattern": "^(\\S.*)?\\S$",
          "title": "Value",
          "type": "string"
        },
        "variant": {
          "$ref": "#/$defs/NameVariant"
        }
      },
      "required": [
        "value",
        "variant"
      ],
      "title": "NameRule",
      "type": "object"
    },
    "NameVariant": {
      "enum": [
        "common",
        "official",
        "alternate",
        "short"
      ],
      "title": "NameVariant",
      "type": "string"
    },
    "Names": {
      "additionalProperties": false,
      "description": "Multilingual names container.",
      "properties": {
        "common": {
          "additionalProperties": false,
          "patternProperties": {
            "^(?:(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}?)|(?:[A-Za-z]{4,8}))(?:-[A-Za-z]{4})?(?:-[A-Za-z]{2}|[0-9]{3})?(?:-(?:[A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(?:-[A-WY-Za-wy-z0-9](?:-[A-Za-z0-9]{2,8})+)*$": {
              "description": "String with no leading/trailing whitespace",
              "pattern": "^(\\S.*)?\\S$",
              "type": "string"
            }
          },
          "propertyNames": {
            "description": "IETF BCP-47 language tag"
          },
          "title": "Common",
          "type": "object"
        },
        "primary": {
          "description": "The most commonly used name.",
          "minLength": 1,
          "pattern": "^(\\S.*)?\\S$",
          "title": "Primary",
          "type": "string"
        },
        "rules": {
          "description": "Rules for names that cannot be specified in the simple common names property. These rules can cover other name variants such as official, alternate, and short; and they can optionally include geometric scoping (linear referencing) and side-of-road scoping for complex cases.",
          "items": {
            "$ref": "#/$defs/NameRule"
          },
          "title": "Rules",
          "type": "array"
        }
      },
      "required": [
        "primary"
      ],
      "title": "Names",
      "type": "object"
    },
    "OperatingStatus": {
      "enum": [
        "open",
        "permanently_closed",
        "temporarily_closed"
      ],
      "title": "OperatingStatus",
      "type": "string"
    },
    "PerspectiveMode": {
      "description": "Perspective mode for disputed names.",
      "enum": [
        "accepted_by",
        "disputed_by"
      ],
      "title": "PerspectiveMode",
      "type": "string"
    },
    "Perspectives": {
      "additionalProperties": false,
      "description": "Political perspectives container.",
      "properties": {
        "countries": {
          "description": "Countries holding the given mode of perspective.",
          "items": {
            "description": "ISO 3166-1 alpha-2 country code",
            "maxLength": 2,
            "minLength": 2,
            "pattern": "^[A-Z]{2}$",
            "type": "string"
          },
          "minItems": 1,
          "title": "Countries",
          "type": "array",
          "uniqueItems": true
        },
        "mode": {
          "$ref": "#/$defs/PerspectiveMode",
          "description": "Whether the perspective holder accepts or disputes this name."
        }
      },
      "required": [
        "mode",
        "countries"
      ],
      "title": "Perspectives",
      "type": "object"
    },
    "Side": {
      "description": "Represents the side on which something appears relative to a facing or heading\ndirection, e.g. the side of a road relative to the road orientation, or relative to\nthe direction of travel of a person or vehicle.",
      "enum": [
        "left",
        "right"
      ],
      "title": "Side",
      "type": "string"
    },
    "SourcePropertyItem": {
      "additionalProperties": false,
      "description": "An object storing the source for a specificed property.\n\nThe property is a reference to the property element within this Feature, and will be\nreferenced using JSON Pointer Notation RFC 6901 (\nhttps://datatracker.ietf.org/doc/rfc6901/).\nThe source dataset for that referenced property will be specified in the overture list of approved sources from the Overture Data Working Group that contains the relevant metadata for that dataset including license source organization.",
      "properties": {
        "between": {
          "description": "Linear reference range [start, end] where 0.0 <= start < end <= 1.0",
          "items": {
            "maximum": 1.0,
            "minimum": 0.0,
            "type": "number"
          },
          "maxItems": 2,
          "minItems": 2,
          "title": "Between",
          "type": "array"
        },
        "confidence": {
          "description": "Confidence score between 0.0 and 1.0",
          "maximum": 1.0,
          "minimum": 0.0,
          "title": "Confidence",
          "type": "number"
        },
        "dataset": {
          "title": "Dataset",
          "type": "string"
        },
        "license": {
          "description": "License name. This should be a valid SPDX license identifier when available. If the license is NULL, contact the data provider for more license information.",
          "pattern": "^(\\S.*)?\\S$",
          "title": "License",
          "type": "string"
        },
        "property": {
          "description": "JSON Pointer (RFC 6901)",
          "title": "Property",
          "type": "string"
        },
        "record_id": {
          "description": "Refers to the specific record within the dataset that was used.",
          "title": "Record Id",
          "type": "string"
        },
        "update_time": {
          "description": "Timestamp when the feature was last updated",
          "format": "date-time",
          "title": "Update Time",
          "type": "string"
        }
      },
      "required": [
        "property",
        "dataset"
      ],
      "title": "SourcePropertyItem",
      "type": "object"
    }
  },
  "additionalProperties": false,
  "description": "A Place is a point representation of a real-world facility, service, or amenity.\n\nPlace features are compatible with GeoJSON Point features.",
  "patternProperties": {
    "^ext_.*$": {
      "description": "Additional top-level properties must be prefixed with `ext_`."
    }
  },
  "properties": {
    "bbox": {
      "items": {
        "type": "number"
      },
      "maxItems": 4,
      "minItems": 4,
      "title": "Bbox",
      "type": "array"
    },
    "geometry": {
      "description": "Position of the place",
      "properties": {
        "bbox": {
          "items": {
            "type": "number"
          },
          "minItems": 4,
          "type": "array"
        },
        "coordinates": {
          "items": {
            "type": "number"
          },
          "maxItems": 3,
          "minItems": 2,
          "type": "array"
        },
        "type": {
          "const": "Point",
          "type": "string"
        }
      },
      "required": [
        "type",
        "coordinates"
      ],
      "title": "Geometry",
      "type": "object"
    },
    "id": {
      "description": "A feature ID. This may be an ID associated with the Global Entity Reference System (GERS) if\u2014and-only-if the feature represents an entity that is part of GERS.",
      "minLength": 1,
      "pattern": "^\\S+$",
      "title": "Id",
      "type": "string"
    },
    "properties": {
      "additionalProperties": false,
      "patternProperties": {
        "^ext_.*$": {
          "description": "Additional top-level properties must be prefixed with `ext_`."
        }
      },
      "properties": {
        "addresses": {
          "items": {
            "$ref": "#/$defs/Address"
          },
          "minItems": 1,
          "title": "Addresses",
          "type": "array"
        },
        "brand": {
          "$ref": "#/$defs/Brand"
        },
        "categories": {
          "$ref": "#/$defs/Categories"
        },
        "confidence": {
          "description": "The confidence of the existence of the place. It's a number between 0 and 1. 0 means that we're sure that the place doesn't exist (anymore). 1 means that we're sure that the place exists. If there's no value for the confidence, it means that we don't have any confidence information. Places with operating_status set to 'closed' will have a confidence score of 0",
          "maximum": 1.0,
          "minimum": 0.0,
          "title": "Confidence",
          "type": "number"
        },
        "emails": {
          "description": "The email addresses of the place.",
          "items": {
            "format": "email",
            "type": "string"
          },
          "minItems": 1,
          "title": "Emails",
          "type": "array",
          "uniqueItems": true
        },
        "names": {
          "$ref": "#/$defs/Names"
        },
        "operating_status": {
          "$ref": "#/$defs/OperatingStatus",
          "description": "Indicates the operating status of a place, can be one of [\"open\", \"permanently_closed\", \"temporarily_closed\"].\nThis is not an indication of 'opening hours' or that the place is open/closed at the current time-of-day or day-of-week."
        },
        "phones": {
          "description": "The phone numbers of the place.",
          "items": {
            "description": "International phone number (+ followed by country code and number)",
            "pattern": "^\\+\\d{1,3}[\\s\\-\\(\\)0-9]+$",
            "type": "string"
          },
          "minItems": 1,
          "title": "Phones",
          "type": "array",
          "uniqueItems": true
        },
        "socials": {
          "description": "The social media URLs of the place.",
          "items": {
            "format": "uri",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string"
          },
          "minItems": 1,
          "title": "Socials",
          "type": "array",
          "uniqueItems": true
        },
        "sources": {
          "description": "The array of source information for the properties of a given feature, with each entry being a source object which lists the property in JSON Pointer notation and the dataset approved sources from the Overture Data Working Group that contains the relevant metadata for that dataset including license source organization.",
          "items": {
            "$ref": "#/$defs/SourcePropertyItem"
          },
          "minItems": 1,
          "title": "Sources",
          "type": "array",
          "uniqueItems": true
        },
        "theme": {
          "const": "places",
          "title": "Theme",
          "type": "string"
        },
        "type": {
          "const": "place",
          "title": "Type",
          "type": "string"
        },
        "version": {
          "description": "",
          "maximum": 2147483647,
          "minimum": 0,
          "title": "Version",
          "type": "integer"
        },
        "websites": {
          "description": "The websites of the place.",
          "items": {
            "format": "uri",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string"
          },
          "minItems": 1,
          "title": "Websites",
          "type": "array",
          "uniqueItems": true
        }
      },
      "required": [
        "theme",
        "type",
        "version",
        "operating_status"
      ],
      "type": "object",
      "unevaluatedProperties": false
    },
    "type": {
      "const": "Feature",
      "type": "string"
    }
  },
  "required": [
    "id",
    "geometry",
    "properties",
    "type"
  ],
  "title": "place",
  "type": "object"
}