"use strict";(self.webpackChunkoverture_schema=self.webpackChunkoverture_schema||[]).push([[453],{3794:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>m,contentTitle:()=>x,default:()=>y,frontMatter:()=>g,metadata:()=>b,toc:()=>f});var i=r(4848),t=r(8453),l=r(1432),s=r(7595),d=r.n(s),a=r(6770),o=r(8285),u=r(2086);const c='---\nid: overture:buildings:part:1234\ntype: Feature\ngeometry:\n  type: Polygon\n  coordinates: [[\n            [-77.036873, 38.897804],\n            [-77.036873, 38.897559],\n            [-77.036260, 38.897559],\n            [-77.036260, 38.897804],\n            [-77.036873, 38.897804]\n          ]]\nproperties:\n  # Custom user properties.\n  ext_foo: I am a customer user property.\n  ext_bar: Me too!\n  # Overture properties\n  theme: buildings\n  type: building_part\n  version: 1\n  level: 1\n  update_time: "2023-06-06T10:30:00-08:00"\n  building_id: abc123\n  height: 21.34\n  num_floors: 4\n  min_height: 15.0\n  min_floor: 2\n  roof_shape: dome\n  roof_orientation: across\n  roof_direction: 23.4\n  sources:\n  - property: ""\n    dataset: microsoftMLBuildings\n  - property: /properties/height\n    dataset:  metaLidarExtractions\n';var h=r(1470),p=r(9365);const g={title:"building_part"},x="Building part",b={id:"reference/buildings/building_part",title:"building_part",description:"Geometry Type",source:"@site/docs/reference/buildings/building_part.mdx",sourceDirName:"reference/buildings",slug:"/reference/buildings/building_part",permalink:"/reference/buildings/building_part",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"building_part"},sidebar:"docs",previous:{title:"building",permalink:"/reference/buildings/building"},next:{title:"boundary",permalink:"/reference/divisions/boundary"}},m={},f=[{value:"Schema",id:"schema",level:2},{value:"Examples",id:"examples",level:2}];function j(e){const n={h1:"h1",h2:"h2",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"building-part",children:"Building part"}),"\n",(0,i.jsx)("table",{children:(0,i.jsxs)("tbody",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{children:"Geometry Type"}),(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"Polygon"})," or ",(0,i.jsx)("code",{children:"MultiPolygon"})]})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{children:"Theme"}),(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"buildings"})})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{children:"Type"}),(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"building_part"})})]})]})}),"\n",(0,i.jsx)(n.h2,{id:"schema",children:"Schema"}),"\n",(0,i.jsxs)(h.default,{children:[(0,i.jsx)(p.default,{value:"browsable",label:"Browsable",default:!0,children:(0,i.jsx)(d(),{schema:(0,o.A)(u.default),resolverOptions:(0,a.A)({remote:!0,yamlBasePath:"/buildings"})})}),(0,i.jsx)(p.default,{value:"yaml",label:"YAML",default:!0,children:(0,i.jsx)(l.default,{language:"jsx",children:u.default})})]}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(h.default,{children:(0,i.jsx)(p.default,{value:"1",label:"Building Part",default:!0,children:(0,i.jsx)(l.default,{language:"json",children:JSON.stringify((0,o.A)(c),null,2)})})})]})}function y(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(j,{...e})}):j(e)}}}]);